definitions:
  dto.BaseResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  dto.UserRequestCreate:
    properties:
      email:
        maxLength: 64
        minLength: 3
        type: string
      name:
        maxLength: 64
        minLength: 3
        type: string
      password:
        type: string
      role_id:
        type: string
    required:
    - email
    - name
    - role_id
    type: object
  dto.UserRequestUpdate:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Get Users List
      parameters:
      - description: data per page
        in: query
        name: limit
        required: true
        type: string
      - description: page number
        in: query
        name: page
        required: true
        type: string
      - description: asc/desc
        in: query
        name: sort
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Fetch
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create New User
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequestCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Store
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update User Data
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequestUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get User By ID
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: GetByID
      tags:
      - Users
swagger: "2.0"
