// Code generated by mockery v2.25.1. DO NOT EDIT.

package mocks

import (
	context "context"
	domain "microservice/shared/domain"

	mock "github.com/stretchr/testify/mock"
)

// RoleRedisRepository is an autogenerated mock type for the RoleRedisRepository type
type RoleRedisRepository struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: c, id
func (_m *RoleRedisRepository) GetByID(c context.Context, id string) (domain.User, error) {
	ret := _m.Called(c, id)

	var r0 domain.User
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (domain.User, error)); ok {
		return rf(c, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) domain.User); ok {
		r0 = rf(c, id)
	} else {
		r0 = ret.Get(0).(domain.User)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(c, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRoleRedisRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRoleRedisRepository creates a new instance of RoleRedisRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRoleRedisRepository(t mockConstructorTestingTNewRoleRedisRepository) *RoleRedisRepository {
	mock := &RoleRedisRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
